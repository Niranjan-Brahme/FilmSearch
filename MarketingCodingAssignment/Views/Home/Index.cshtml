@{
    ViewData["Title"] = "Home Page";
}

@{
    ViewData["Title"] = "Film Search";
}

@section Styles {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha384-Xt5CRpYtyYBajW3CGVgPBE9xoydO8G7Z4R+J1GhR2HQwzY5EoyUPMRgfkyvI8RY6" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

    <style type="text/css">
        body {
            background-color: #f8f9fa;
            font-family: 'Arial', sans-serif;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .material-symbols-outlined {
            font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
        }

        .search-section {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }

        .autocomplete .input-group {
            border-radius: 50px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .ui-autocomplete {
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-left: 50px; 
            margin-right: -10px;
        }

        #searchtext {
            border: none;
            padding: 15px 25px;
            font-size: 18px;
        }

        #searchbutton {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 15px 25px;
            transition: background-color 0.3s ease;
        }

            #searchbutton:hover {
                background-color: #0056b3;
            }

        .filters-section {
            margin-top: 30px;
        }

        .form-group {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 20px;
        }

            .form-group > div {
                flex: 1 1 200px;
            }

        label {
            color: #495057;
            font-weight: 600;
            margin-bottom: 8px;
            display: block;
        }

        select, input[type="date"] {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ced4da;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

            select:focus, input[type="date"]:focus {
                border-color: #80bdff;
                outline: 0;
                box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
            }

        .results-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 30px;
            margin-bottom: 40px;
        }

        .result-panel {
            background-color: #ffffff;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            padding: 25px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .result-panel:hover {
                transform: translateY(-10px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
                border-color: #007bff;
                box-shadow: 0 0 10px rgba(0,123,255,.55); 
            }

        .panel-title {
            font-size: 22px;
            color: #007bff;
            margin-bottom: 15px;
        }

            .panel-title a {
                text-decoration: none;
            }

        .tagline {
            font-style: italic;
            color: #6c757d;
            margin-bottom: 10px;
            display: block;
        }

        .details span {
            margin-right: 15px;
            color: #495057;
        }

        .overview {
            margin-top: 15px;
            color: #495057;
            font-size: 14px;
        }

        .results-nav {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 60px;
        }

            .results-nav .top-row {
                display: flex;
                justify-content: space-between;
                width: 100%;
                align-items: center;
                margin-bottom: 5px;
            }

            .results-nav button {
                background-color: #007bff;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 50px;
                transition: background-color 0.3s ease;
            }

                .results-nav button:hover {
                    background-color: #0056b3;
                }

            .results-nav #rowsPerPageSelect {
                width: 250px;
                padding: 5px; 
                border-radius: 5px; 
            }


            .results-nav #showing-records {
                flex-grow: 2; 
                text-align: center; 
            }

        #showing-records {
            font-size: 16px;
            color: #495057;
        }

        #rowsPerPageSelect {
            padding: 10px 15px;
            border: 1px solid #ced4da;
            border-radius: 8px;
            font-size: 16px;
        }

        .loading-overlay {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(5px);
        }

        .spinner-border {
            width: 3rem;
            height: 3rem;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script>

        $(function () {
            $("#searchtext").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Home/Autocomplete",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            if (data && data.length > 0) {
                                response(data.slice(0, 5));
                            } else {
                                response([]);
                            }
                        },
                        error: function () {
                            response([]);
                        }
                    });
                },
                minLength: 2,
                select: function (event, ui) {
                    $("#searchtext").val(ui.item.value);
                    updateSearchAndResetCount();
                }
            });
        });

        function showLoadingOverlay() {
            $(".loading-overlay").fadeIn();
        }

        function hideLoadingOverlay() {
            $(".loading-overlay").fadeOut();
        }

        // Number of results rows to send back at a time (12).
        var currentPage = 0;
        var rowsPerPage = 12;
        var rowCount = 0;

        // Encode the results
        var $converter = $("<div>");
        function htmlEncode(s) {
            return $converter.text(s).html();
        }

        // If they press the enter key, execute the search
        $("#searchtext").on("keydown", function (e) {
            if (e.keyCode == 13) {
                e.preventDefault();
                updateSearchAndResetCount();
            }
        });

        // Initial seach button click (returns the intial set of results).
        $("#searchbutton").on("click", function () {
            updateSearchAndResetCount();
        });

        function updateSearchAndResetCount() {
            currentPage = 0;
            updateSearch();
        }

        $("#durationMinimumFacet, #durationMaximumFacet, #voteAverageMinimumFacet, #releaseDateStart, #releaseDateEnd").on("change", function () {
            updateSearchAndResetCount();
        });
        updateSearchAndResetCount();


        function updateSearch() {
            showLoadingOverlay();
            $.ajax({
                type: "get",
                url: "/home/search",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: {
                    searchString: encodeURIComponent($("#searchtext").val()),
                    start: currentPage,
                    rows: rowsPerPage,
                    voteAverageMinimum: document.getElementById("voteAverageMinimumFacet").value,
                    durationMinimum: document.getElementById("durationMinimumFacet").value,
                    durationMaximum: document.getElementById("durationMaximumFacet").value,
                    releaseDateStart: document.getElementById("releaseDateStart").value,
                    releaseDateEnd: document.getElementById("releaseDateEnd").value
                },
                success: function (ajaxResponse) {
                    console.log(ajaxResponse); // Debugging log
                    if (ajaxResponse && ajaxResponse.searchResults) {
                        rowCount = ajaxResponse.searchResults.recordsCount;
                        var startRow = currentPage * rowsPerPage + 1;
                        var calculatedEndRow = (currentPage + 1) * rowsPerPage;
                        var endRow = rowCount < calculatedEndRow ? rowCount : calculatedEndRow;
                        $("#showing-records").empty();
                        $("#showing-records").append("<em>Showing records " + startRow + " to " + endRow + " out of " + rowCount + "</em>");

                        addResults(0, ajaxResponse.searchResults.films);
                    } else {
                        $("#showing-records").empty();
                        $("#showing-records").append("<em>No records found</em>");
                    }
                    hideLoadingOverlay();
                },
                failure: function (ajaxResponse) {
                    document.getElementById("errortext").textContent = "Failure! " + ajaxResponse.responseText;
                    hideLoadingOverlay();
                },
                error: function (ajaxResponse) {
                    document.getElementById("errortext").textContent = "Error! " + ajaxResponse.responseText;
                    hideLoadingOverlay();
                }
            });
        }

        // Apply formatting and append new results.
        function addResults(start, results) {
            var lines = [];
            var resultCount = results.length;

            for (var i = 0; i < resultCount; ++i) {
                var item = results[i];
                lines.push("<div class='result-panel'>");
                lines.push("<div class='panel-heading'><h3 class='panel-title'><a href='https://www.imdb.com/title/" + htmlEncode(item.id) + "'>" + htmlEncode(item.title) + "</a></h3></div>");
                lines.push("<div class='panel-body'>");

                lines.push("<div class='details'>");
                if (item.tagline) lines.push("<span class='tagline'><em>" + item.tagline + "</em></span>");
                if (item.runtime) lines.push("<span> " + item.runtime + " minutes</span>");
                if (item.revenue) lines.push("<span>" + item.revenue.toLocaleString("en-US", { style: "currency", currency: "USD" }) + "</span>");
                lines.push("</div>");

                lines.push("<div class='release-date'>");
                if (item.releaseDate) {
                    lines.push("Initially released " + new Date(item.releaseDate).toLocaleDateString());
                }
                if (item.voteAverage) {
                    lines.push(" | Vote Average: " + item.voteAverage);
                }
                lines.push("</div>");

                if (item.overview) lines.push("<div class='overview'>" + item.overview + "</div>");

                lines.push("</div>"); 
                lines.push("</div>"); 
            }

            $("#searchresults").empty().append(lines.join(""));
        }


        $("#previous-button").on("click", function () {
            if (currentPage > 0) {
                currentPage--;
                updateSearch();
                $("#nextPage").prop("disabled", false);
            }
            if (currentPage === 0) {
                $("#previousPage").prop("disabled", true);
            }
        });

        $("#next-button").on("click", function () {
            if (rowCount >= (currentPage + 1) * rowsPerPage) {
                currentPage++;
                updateSearch();
                $("#previousPage").prop("disabled", false);
            }
            if ((currentPage + 1) * rowsPerPage >= rowCount) {
                $("#nextPage").prop("disabled", true);
            }
        });

        $("#rowsPerPageSelect").on("change", function () {
            rowsPerPage = parseInt($(this).val());
            updateSearchAndResetCount();
        });

        document.addEventListener('DOMContentLoaded', function () {
            hideLoadingOverlay();
        }, false);

    </script>

}

<div class="container">
    <div class="text-center mb-5">
        <h1 class="display-4">Film Search</h1>
    </div>

    <div class="search-section">
        <div class="autocomplete">
            <div class="input-group">
                <input id="searchtext" type="search" name="searchtext" placeholder="Search for films..." class="form-control" autocomplete="off">
                <span class="input-group-btn">
                    <button id="searchbutton" class="btn" title="Search">
                        <span class="material-symbols-outlined">search</span>
                    </button>
                </span>
            </div>
        </div>
        <div class="filters-section">
            <div class="form-group">
                <div>
                    <label for="durationMinimumFacet">Duration (Minimum)</label>
                    <select id="durationMinimumFacet" class="form-control">
                        <option value="0">0 minutes</option>
                        <option value="30">30 minutes</option>
                        <option value="60">1 hour</option>
                        <option value="120">2 hours</option>
                        <option value="180">3 hours</option>
                        <option value="240">4 hours</option>
                    </select>
                </div>
                <div>
                    <label for="durationMaximumFacet">Duration (Maximum)</label>
                    <select id="durationMaximumFacet" class="form-control">
                        <option value="30">30 minutes</option>
                        <option value="60">1 hour</option>
                        <option value="120">2 hours</option>
                        <option value="180">3 hours</option>
                        <option value="240">4 hours</option>
                        <option selected value="1000">No limit</option>
                    </select>
                </div>
                <div>
                    <label for="voteAverageMinimumFacet">Minimum Rating</label>
                    <select id="voteAverageMinimumFacet" class="form-control">
                        <option value="0.0">Any rating</option>
                        <option value="5.0">5+</option>
                        <option value="6.0">6+</option>
                        <option value="7.0">7+</option>
                        <option value="8.0">8+</option>
                        <option value="9.0">9+</option>
                    </select>
                </div>
                <div>
                    <label for="releaseDateStart">Release Date (Start)</label>
                    <input type="date" id="releaseDateStart" class="form-control" />
                </div>
                <div>
                    <label for="releaseDateEnd">Release Date (End)</label>
                    <input type="date" id="releaseDateEnd" class="form-control" />
                </div>
            </div>
            <div class="mt-3"><span id="errortext" class="text-danger"></span></div>
        </div>
    </div>

    <div class="results-grid" id="searchresults"></div>

    <div id="results-count" class="results-nav">
        <div class="top-row">
            <button id="previous-button" class="btn" title="Previous">
                <span class="material-symbols-outlined">arrow_back_ios</span>
            </button>
            <span id="showing-records"><em>Showing records 0 to 0 out of 0</em></span>
            <button id="next-button" class="btn" title="Next">
                <span class="material-symbols-outlined">arrow_forward_ios</span>
            </button>
        </div>
        <select id="rowsPerPageSelect" title="Results per page">
            <option value="12">12 per page</option>
            <option value="24">24 per page</option>
            <option value="48">48 per page</option>
            <option value="96">96 per page</option>
        </select>
    </div>

</div>

<div class="loading-overlay">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>


